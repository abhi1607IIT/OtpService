// Code generated by MockGen. DO NOT EDIT.
// Source: ./otp_repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "OtpService/dal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOtpRepo is a mock of OtpRepo interface.
type MockOtpRepo struct {
	ctrl     *gomock.Controller
	recorder *MockOtpRepoMockRecorder
}

// MockOtpRepoMockRecorder is the mock recorder for MockOtpRepo.
type MockOtpRepoMockRecorder struct {
	mock *MockOtpRepo
}

// NewMockOtpRepo creates a new mock instance.
func NewMockOtpRepo(ctrl *gomock.Controller) *MockOtpRepo {
	mock := &MockOtpRepo{ctrl: ctrl}
	mock.recorder = &MockOtpRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOtpRepo) EXPECT() *MockOtpRepoMockRecorder {
	return m.recorder
}

// CreateUserOtp mocks base method.
func (m *MockOtpRepo) CreateUserOtp(userOtp *models.UserOtp) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserOtp", userOtp)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserOtp indicates an expected call of CreateUserOtp.
func (mr *MockOtpRepoMockRecorder) CreateUserOtp(userOtp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserOtp", reflect.TypeOf((*MockOtpRepo)(nil).CreateUserOtp), userOtp)
}

// GetByUserIdAndOtp mocks base method.
func (m *MockOtpRepo) GetByUserIdAndOtp(userId, otp string) (*models.UserOtp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserIdAndOtp", userId, otp)
	ret0, _ := ret[0].(*models.UserOtp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserIdAndOtp indicates an expected call of GetByUserIdAndOtp.
func (mr *MockOtpRepoMockRecorder) GetByUserIdAndOtp(userId, otp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserIdAndOtp", reflect.TypeOf((*MockOtpRepo)(nil).GetByUserIdAndOtp), userId, otp)
}

// SaveUserOtp mocks base method.
func (m *MockOtpRepo) SaveUserOtp(userOtp *models.UserOtp) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveUserOtp", userOtp)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveUserOtp indicates an expected call of SaveUserOtp.
func (mr *MockOtpRepoMockRecorder) SaveUserOtp(userOtp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUserOtp", reflect.TypeOf((*MockOtpRepo)(nil).SaveUserOtp), userOtp)
}
